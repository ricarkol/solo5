#!/bin/sh
# Copyright (c) 2015-2017 Contributors as noted in the AUTHORS file
#
# This file is part of ukvm, a unikernel monitor.
#
# Permission to use, copy, modify, and/or distribute this software
# for any purpose with or without fee is hereby granted, provided
# that the above copyright notice and this permission notice appear
# in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR
# CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS
# OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
# NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

if [ "$#" -lt 1 ]; then
    echo "Usage: ukvm-configure UKVM_SRC [MODULES]"
    echo "    UKVM_SRC is /path/to/ukvm"
    echo "    MODULES can be any combination of: net blk gdb"
    exit 1
fi

UKVM_CC=${UKVM_CC:-cc}
UKVM_SRC=`readlink -f $1`
if [ ! -d ${UKVM_SRC} -o ! -f ${UKVM_SRC}/ukvm_core.c ]; then
    echo "Error: Not a ukvm source directory: ${UKVM_SRC}" 1>&2
    exit 1
fi
shift

UKVM_MODULE_OBJS=
UKVM_MODULE_CFLAGS=
for MODULE in "$@"; do
    if [ ! -f ${UKVM_SRC}/ukvm_module_${MODULE}.c ]; then
        echo "Error: Invalid module: ${MODULE}" 1>&2
        exit 1
    fi
    UKVM_MODULE_OBJS="${UKVM_MODULE_OBJS} ukvm_module_${MODULE}.o"
    UKVM_MODULE_CFLAGS="${UKVM_MODULE_CFLAGS} -DUKVM_MODULE_${MODULE}"
done
UKVM_MODULE_CFLAGS=$(echo ${UKVM_MODULE_CFLAGS} | tr '[a-z]' '[A-Z]')

TARGET=$(${UKVM_CC} -dumpmachine)
echo *******************
echo $TARGET 1>&2
echo *******************
case ${TARGET} in
    x86_64-*linux*)
        UKVM_SYSDEP_OBJS="ukvm_hv_kvm.o ukvm_hv_kvm_x86_64.o ukvm_cpu_x86_64.o"
        UKVM_SYSDEP_HEADERS="ukvm_hv_kvm.h ukvm_cpu_x86_64.h"
        ;;
    *)
        echo "Error: Unsupported compiler target: ${TARGET}" 1>&2
        echo "Error: Using compiler \"${UKVM_CC}\". Set \$UKVM_CC to change it." 1>&2
        exit 1
        ;;
esac

cat <<EOF> Makefile.ukvm
# Generated by ukvm-configure "$@"
# Using compiler "${UKVM_CC}", target "${TARGET}"

UKVM_CC=${UKVM_CC}
UKVM_CFLAGS=-Wall -Werror -std=c99 -O2 -g ${UKVM_MODULE_CFLAGS}
ifdef UKVM_STATIC
UKVM_LDFLAGS=-static
endif

UKVM_OBJS=ukvm_core.o ukvm_elf.o ukvm_main.o ${UKVM_SYSDEP_OBJS} ${UKVM_MODULE_OBJS}
UKVM_HEADERS=ukvm.h ukvm_guest.h ukvm_cc.h ${UKVM_SYSDEP_HEADERS}

UKVM_BUILD_OBJS=\$(addprefix _build-ukvm/,\$(UKVM_OBJS))
UKVM_SRC_HEADERS=\$(addprefix ${UKVM_SRC}/,\$(UKVM_HEADERS))

_build-ukvm:
	mkdir -p _build-ukvm

_build-ukvm/ukvm_%.o: ${UKVM_SRC}/ukvm_%.c \$(MAKEFILE_LIST) | _build-ukvm
	\$(UKVM_CC) \$(UKVM_CFLAGS) -c \$< -o \$@

ukvm-bin: \$(UKVM_BUILD_OBJS) \$(UKVM_SRC_HEADERS) \$(MAKEFILE_LIST)
	\$(UKVM_CC) \$(UKVM_LDFLAGS) -o \$@ \$(UKVM_CFLAGS) \$(UKVM_BUILD_OBJS)

.PHONY: ukvm-clean
ukvm-clean:
	\$(RM) -r _build-ukvm
	\$(RM) ukvm-bin 

EOF
